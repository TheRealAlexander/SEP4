name: Deployment

on:
  push:
    paths:
      - "backend/**"
  pull_request:
    paths:
      - "backend/**"

jobs:
  convert_dockercompose_to_k8s:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Kompose
        run: |
          curl -L https://github.com/kubernetes/kompose/releases/download/v1.24.0/kompose-linux-amd64 -o kompose
          chmod +x kompose
          sudo mv ./kompose /usr/local/bin/kompose
      - name: Convert docker-compose to k8s
        run: kompose convert -f docker-compose.yml -o k8s/
      - name: Upload k8s files
        uses: actions/upload-artifact@v2
        with:
          name: k8s-files
          path: k8s/

  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [mongo, indeklima_webapi, auth_webapi, broker]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Minikube
        id: minikube
        uses: medyagh/setup-minikube@latest
      - name: Download k8s files
        uses: actions/download-artifact@v2
        with:
          name: k8s-files
          path: k8s/
      - name: Apply the k8s files
        run: |
          kubectl apply -f k8s/
      - name: Wait for ${{ matrix.service }} to be ready
        run: |
          kubectl wait --for=condition=available --timeout=600s deployment/${{ matrix.service }}
      - name: Run ${{ matrix.service }} service
        run: |
          minikube service ${{ matrix.service }} --url
      - name: Clean up
        if: ${{ matrix.service == 'broker' }}
        run: |
          eval $(minikube docker-env -u)
          minikube delete
